version: '3.7'

networks:
    backend:

services:

    db:
        container_name: db
        #db with dev data
        #image: app-postgres12.2:0.0.1
        # for pure postgres
        image: postgres:12.2
        volumes:
            - ./data/postgres:/docker-entrypoint-initdb.d
        restart: always
        environment:
            PGDATA: /var/lib/postgresql-static/data
            POSTGRES_DB:        postgres
            POSTGRES_USER:      postgres
            POSTGRES_PASSWORD:  postgres
        ports:
            - "5401:5432"
        networks:
            - backend
        tty: true

    queue:
        container_name: queue
        image: rabbitmq:3-management
        restart: always
        ports:
            - "15672:15672"
            - "5672:5672"
        networks:
            - backend
        tty: true
        
    restapi:
        container_name: restapi
        build:
            context: ./..
            dockerfile: ./deployment/restapi-Dockerfile
        networks:
            - backend
        tty: true
        depends_on:
            - db
        expose:
            - "8881"
        ports:
            - "8881:8881"
        restart: always

    grpcapi:
        container_name: grpcapi
        build:
            context: ./..
            dockerfile: ./deployment/grpcapi-Dockerfile
        networks:
            - backend
        tty: true
        depends_on:
            - db
        expose:
            - "8882"
        ports:
            - "8888:8882"
        restart: always

    scheduler:
        container_name: scheduler
        build:
            context: ./..
            dockerfile: ./deployment/scheduler-Dockerfile
        networks:
            - backend
        tty: true
        depends_on:
            - db
            - queue
        restart: always

    sender:
        container_name: sender
        build:
            context: ./..
            dockerfile: ./deployment/sender-Dockerfile
        networks:
            - backend
        tty: true
        depends_on:
            - db
            - queue
        restart: always


