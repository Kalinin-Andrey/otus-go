package hw03

import (
	"sort"
	"testing"
)

type TestCase struct {
	In string
	Out []string
	IsError bool
}

var TestCases []TestCase = []TestCase{
	TestCase{
		In: "Раз, два, три, опять два, четыре, опять раз, два, три, пять, шесть, шесть, опять шесть1№%;?%;№?%№?%?:))?::%%;№",
		Out: []string{"два", "опять", "пять", "раз", "три", "четыре", "шесть"},
	},
	TestCase{
		In: "Цель: Напиcать функцию, принимающую на вход строку с текстом и возвращающую слайс с 10 самыми частовстречающимеся в тексте словами. Если есть более 10 самых частотых слов (например 15 разных слов встречаются ровно 133 раза, остальные < 100), можно вернуть любые 10 из самых частотных. Словоформы не учитываем. \"нога\", \"ногу\", \"ноги\" - это разные слова. Слово с большой и маленькой буквы можно считать за разные слова. \"Нога\" и \"нога\" - это разные слова. Знаки препиания можно считать \"буквами\" слова или отдельными словами. \"-\" (тире) - это отдельное слово. \"нога,\" и \"нога\" - это разные слова. Пример: \"cat and dog one dog two cats and one man\". \"dog\", \"one\", \"and\" - встречаются два раза, это топ-3. Задание со звездочкой (*): учитывать большие/маленьгие буквы и знаки препинания. \"Нога\" и \"нога\" - это одинаковые слова, \"нога,\" и \"нога\" - это одинаковые слова, \"-\" (тире) - это не слово.",
		Out: []string{"нога", "это", "и", "слова", "разные"},
	},
}

func TestSimpleUnpackString(t *testing.T) {

	for _, c := range TestCases {
		res := frequencyTextAnalysis(c.In)

		for _, testWord := range c.Out {
			hasFound := false
			i := sort.SearchStrings(res, testWord)

			if i < len(res) && res[i] == testWord {
				hasFound = true
			}

			if !hasFound {
				t.Errorf("Test word \"%v\" has not found in result: %v", testWord, res)
			}
		}
	}
}